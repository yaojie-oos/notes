------------------------------
HTML
------------------------------
HTML： 超文本标记语言，用来开发网页的一门语言
CSS：用于美化网页、渲染网页的一门语言
一、HTML概述
1、什么是HTML
	HTML： 超文本标记语言，用来开发网页的一门语言
	w3c组织提供
	HTML是一门标记语言,而不是编程语言
	HTML是通过标记来组织网页结构的
	HTML开发的网页文件以.htm或.html为后缀
	HTML开发的网页由浏览器负责打开并解析
	HTML本质上是文档的一种
		txt、word、pdf、ppt
	
2、HTML的结构
2.1.练习:编写我的第一个网页
	<!doctype html> 
	<html>
		<head>
			<title>网页的标题</title>
			<meta charset="UTF-8"/>
		</head>
		<body>
			<h1>Hello CGB1902...</h1>
		</body>
	</html>

	<!doctype html>: 文档声明,声明当前html的版本为5.0(html5.0是目前最新的版本,也是最常的版本) 
	<head>: 头部分,里面可以声明一些基本属性信息,比如网页的标题、网页使用的编码等
	<meta charset="UTF-8"/>：只要保证charset设置的编码和网页文件另存时的编码一致，网页就不会出现乱码！！
	<body>: 体部分,存放的是真正可视化的网页内容

3、HTML的语法
3.1.标签
	标记、元素都是标签，标签其实就是用尖括号括起来的一组内容， 比如：<html>、<head>、<body>
	标签还分为开始标签（<head>）和结束标签（</head>）
	如果标签内部没有内容要修饰，标签可以自闭，比如：<meta/>=<meta></meta>
	<img/>、<input/>、<br/>

3.2.属性
	属性是声明在标签上，比如：
	<meta charset="utf-8" id="xx"/>
	属性的值可以用单引号或者双引号

3.3.空格和换行
	由于在网页中，多个连续的空白字符（空格、换行、制表符等）会被解析为一个空格显示
	如何在网页中做一个换行？可以使用<br/>标签来代替
	如何在网页中做一个空格？可以使用&nbsp;或者&emsp;来代替
3.4.注释
	作用一：为代码添加解释说明
	作用二：将一些暂时不需要执行的代码注释
	格式：<!-- 注释内容 -->
	注释不能交叉嵌套

二、HTML标签
1、图像标签
	用于在网页中插入一副图像
	<img src="imgs/1.jpg" width="50%"/>
	<img src="imgs/wht.jpg" width="50%"/>
	其中src用于指定图片的地址
	width用于指定图片的宽度
	height用于指定图片的高度
	
2、超链接标签
	超链接标签, 用于在网页中创建指向另外一个文档的超链接(即点击超链接后会跳转到另外一个地址)
	<a href="http://tmooc.cn" target="_blank">tmooc一下、你就不知道</a>
	
3、表格标签
	<table> -- 用于定义一个表格
	<tr> -- 用于定义表格中的行
	<td> -- 用于定义表格行中的单元格
	<th> -- 也是单元格, 是表头中的单元格

	<td colspan="2" id="last-td"></td>
	其中的colspan是设置单元格横跨的列数
	另外rowspan是设置单元格竖跨的行数
	
4、表单标签
	<form action="#"></form>
	其中action指定表单的提交地址
	表单的作用：向服务器发送数据
	
4.1.向服务器发送数据的方式
(1)通过表单向服务器发送数据
	表单中可以提供很多输入项,在输入框中输入数据,在提交表单时,就可以将表单项中的所有数据提交给服务器(提交给了action指定的地址)
(2)通过在超链接的后面拼接参数的形式
	<a href="http://tmooc.cn?username=zhangfei&pwd=123123">
	jdbc:mysql:///jt_db?characterEncoding=utf-8
	
	超链接后面可以通过问号拼接参数,参数可以由多个,多个参数之间用&分割,参数名和参数值用等号连接,当访问超链接中的地址时，就会将地址后面的参数一起带给服务器！！
	
5、表单项标签
5.1.注意事项
	(1)所有要提交给服务器的表单项数据, 表单项上都必须要有name属性,否则在表单提交时,表单项里面的数据将不会被提交
	因此,需要为所有要提交的表单项添加name属性
	(2)另外,还要为单选框、复选框、option设置value（也就是选项被选中时所提交的值）
	(3)单选框或者多选框中,如果要设置某一项默认被选中,可以在元素上添加属性:checked="checked"
	(4)下拉选框默认显示的是第一个选项,如果要设置别的选项默认显示(或选中),可以在option上添加属性:selected="selected"。

5.2.表单项标签总结
(1)普通文本输入框
	<input type="text" name="username"/>
(2)密码输入框
	<input type="password" name="pwd"/>
(3)单选框
	<input type="radio" name="gender"/>
(3)多选框、复选框
	<input type="checkbox" name="like"/>
(4)提交按钮
	<input type="submit"/>
	作用是提交表单中的数据到action指定的地址
(5)普通按钮
	<input type="button" value="换一个"/>
	普通按钮本身没有功能，但是我们可以通过JS或者jQuery为按钮添加功能或行为，例如：
	<input type="button" value="换一个"
			onclick="alert('hello~!')"/>

(6)select/option:实现一个下拉选框
	<select name="city">
		<option value="bj">北京</option>
		<option value="sh">上海</option>
		...
	</select>
(7)textarea: 实现一个多行的文本输入框
	<textarea name="description" cols="30" rows="5"></textarea>

6、注册页面练习
	略	

------------------------------
CSS
------------------------------
一、CSS简介
1、什么是CSS
	CSS：层叠样式表，就是用来美化网页、渲染网页的一门语言
	使用css美化网页，可以使得展示数据的HTML代码和设置样式的CSS代码进行分离，增强了网页的展示能力！

	CSS注释和Java的多行注释格式相同！！
	
2、如何在html中引入css
2.1.通过元素上的style属性(不推荐)
	<div style="border:2px solid red;font-size:26px;background:pink;">
		这是一个div...
	</div>
	第一种方式是将样式写在标签上（行间样式），如果样式特别多，会导致html文档结构的混乱，不利于后期的维护。
	而且代码无法复用！

2.2.通过head标签内部的style标签(推荐)
	<style type="text/css">
		span{
			border:2px solid green;
			font-size:30px;
			/*font-weight:normal; */
			font-weight:bolder; 
		}
	</style>
	第二种方式是将所有的CSS属性集中在一个style标签内部统一管理，初步的实现了html代码和css代码的分离，实现了代码的复用！！

2.3.通过link标签引入外部的css文件(推荐)
	CSS文件保存时的编码必须是utf-8
	第三种方式是将所有的css代码，集中在一个单独的css文件中进行统一管理，真正的实现了css代码和html代码的分离。
	实现了代码的复用。

	<link rel="stylesheet" href="css文件的路径"/>
	
二、CSS选择器
1、基本选择器
(1)元素名/标签名选择器
	根据元素的名称选中元素
	格式: 元素名{ css属性... }
	示例:
		span{
			background:#DDA0DD;
			font-size:24px;
			font-weight:bolder;
		}
(2)类选择器
	通过元素上通用的属性class, 可以为元素指定所属的类(分组), 所有class值相同的元素则为一组(一类), 可以通过class值选中这一类的元素, 统一设置样式
	格式: .class值{ CSS属性... }

	另外,一个元素也可以设置多个class属性值,表明该元素同时属于多个分组,多个分组的样式会同时作用在该元素上
	<span class="c1 c2">
	如果多个分组的样式冲突，后面的会覆盖前面的样式！！

	示例：
		.c1{/*选中所有class值为c1的元素*/
			background:#8FBC8F;
			color:green;
		}
		.c2{/*选中所有class值为c2的元素*/
			background:#F0E68C;
			color:blue;
		}
		
(3)ID选择器
	通过元素上通用的属性 id，可以为元素设置一个独一无二的编号，通过编号可以选中唯一的一个元素
	格式： #id值{ css属性... }
	示例：
		#p1{/*选中id值为p1的元素*/
			font-weight:bolder;
			text-indent:20px;
		}
	
	优先级：ID选择器（100） > class选择器（10） > 元素名选择器（1）

2、扩展选择器
(1)后代选择器
	格式: 父选择器 后代选择器{ css属性... }
	例如:
		#d1 span{} -- 选中id为d1元素内部的所有span元素
(2)子元素选择器
	格式: 父选择器>子选择器{ css属性... }
	例如:
		#d1>span{} -- 选中id为d1元素内部的所有span子元素
(3)分组选择器
	分组选择器就是，将多个选择器选中的元素综合在一起统一来设置样式
	格式：选择器1,选择器2,...选择器n{ css属性... }
	示例：
		.c1,.c2,#p1 span{
			background:#F4A460;
		}
	 	-- 选中class为c1、class为c2以及id为p1元素内部的所有span元素

(4)属性选择器
	根据元素的属性条件选中元素
	格式：选择器[属性条件..][属性条件..]{ css属性.. }
	示例：
		input[type='text']{}
		input[type='checkbox']{}

(5)伪类选择器
	根据元素的状态选中元素
	格式： 选择器：hover{} -- 当鼠标悬停在元素上时，为元素设置样式
		  选择器：first-child{} -- 为选择器选中的第一个元素设置样式
		  选择器：last-child{}-- 为选择器选中的最后一个元素设置样式

三、CSS常用属性
1、文本相关的属性
	text-align:设置文本水平排列方式
		left(居左,默认值)、right(居右)、center(居中)
	text-indent:设置首行文本缩进
		单位: px %;
	text-decoration:设置文本下划线样式
		underline(有下划线) none(没有下划线)
	letter-spacing:设置字符间距
	text-shadow:设置字体阴影，取值：
		阴影水平偏移量 阴影垂直偏移量 阴影扩散程度 阴影颜色
	
2、字体相关属性
	font-size:字体大小
	font-weight:字体粗细 
		normal(正常)
		bolder(加粗)
		100、200、300...900
	color:字体颜色
	font-family:设置字体
	line-height:行高
	
3、背景相关属性
	background:复合属性, 可以同时设置背景颜色,背景图片,背景图片的位置等
	background-color:背景颜色
	background-image:背景图片
	background-repeat:设置背景图片是否以及如何重复排列
	background-position:设置背景图片的位置
	









